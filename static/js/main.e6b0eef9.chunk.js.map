{"version":3,"sources":["components/NodeEditor/NodeEditor.jsx","components/Graph/Graph.jsx","components/NodeList/NodeList.jsx","App.js","reportWebVitals.js","store/elementsReducer.js","store/graphElements.js","store/currElemReducer.js","store/editorFieldsReducer.js","store/index.js","index.js"],"names":["NodeEditor","node","onSubmit","dispatch","useDispatch","useSelector","state","editorFields","fields","id","label","content","data","type","payload","className","value","onChange","event","target","onClick","Graph","elements","currElem","currElement","parseElementContent","oldId","x","y","a","indexOf","b","slice","length","params1","sourcePosition","targetPosition","position","params2","source","onElementsRemove","elementsToRemove","onConnect","params","deleteKeyCode","nodesDraggable","onElementClick","element","startsWith","onPaneClick","document","getElementsByClassName","click","NodeList","filter","map","i","Array","from","el","getAttribute","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","elementsReducer","action","ids","includes","currElemReducer","editorFieldsReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e6b0eef9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './main.sass'\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst NodeEditor = ({node, onSubmit}) => {\n    const dispatch = useDispatch();\n    const {id, label, content} = useSelector(state => state.editorFields.fields);\n\n    if (label === \"\" || (content === \"\" && node.data.content !== \"\") || node.id !== id) {\n        dispatch({type: \"INIT\", payload: {label: node.data.label, content: node.data.content, id: node.id}});\n    }\n\n    return (\n        <div className='node-editor'>\n            <div className=\"node-editor__content\">\n                <div className=\"node-editor__item\">\n                    Id: {id}\n                </div>\n                <div className=\"node-editor__item\">\n                    <label>Label:</label>\n                    <input\n                        className='input__label'\n                        type='text'\n                        value={label}\n                        onChange={(event) => dispatch({type: \"CHANGE\", payload: {label: event.target.value, content, id}})}\n                    />\n\n                </div>\n\n                <div className=\"node-editor__item\">\n                    <label>Content</label>\n                    <textarea\n                        className='input__content'\n                        value={content}\n                        onChange={(event) => dispatch({type: \"CHANGE\", payload: {content: event.target.value, label, id}})}\n                    />\n                </div>\n                <button className=\"node-editor-submit\" onClick={() => onSubmit(label, content)}>Submit</button>\n            </div>\n        </div>\n    );\n};\n\nexport default NodeEditor;","import React from 'react';\nimport ReactFlow from \"react-flow-renderer\";\n\nimport NodeEditor from '../NodeEditor/NodeEditor'\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport 'react-flow-renderer/dist/style.css';\nimport 'react-flow-renderer/dist/theme-default.css';\nimport './main.sass'\n\nconst Graph = () => {\n    const dispatch = useDispatch();\n    const elements = useSelector(state => state.elements.elements);\n    const currElem = useSelector(state => state.currElement.currElem);\n\n\n    const onElementsRemove = (elementsToRemove) => {\n        dispatch({type: \"REMOVE_ELEMENTS\", payload: elementsToRemove});\n    }\n\n    const onConnect = (params) => {\n        dispatch({type: \"ADD_ELEMENTS\", payload: [{...params, id: 'e' + params.source + '-' + params.target}]});\n    }\n\n    const onPaneClick = () => {\n        dispatch({type: \"UNSET_CURR\"});\n    }\n\n    const onElementClick = (event, element) => {\n        if (!(element.id.startsWith(\"e\"))) {\n            dispatch({type: \"SET_CURR\", payload: element});\n        }\n    }\n\n    const onElementEdit = (label, content) => {\n        if (label !== currElem.label) {\n            dispatch({type: \"CHANGE_LABEL\", payload: {id: currElem.id, label}});\n        }\n\n        if (content && content !== currElem.content) {\n            dispatch({type: \"CHANGE_CONTENT\", payload: {id: currElem.id, content}});\n            parseElementContent(\n                currElem.id,\n                content,\n                currElem.position.x,\n                currElem.position.y\n            );\n        }\n\n        dispatch({type: \"UNSET_CURR\"});\n        document.getElementsByClassName('react-flow__pane')[0].click();\n    }\n\n    const parseElementContent = (oldId, content, x, y) => {\n        const a = content.indexOf('[[');\n        const b = content.indexOf(']]', a);\n        const label = content.slice(a + 2, b);\n\n        const id = elements.length;\n\n        const params1 = {\n            id: `${id}`,\n            data: {\n                label,\n                content: ''\n            },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            position: {\n                x: x + 250,\n                y: y + 120\n            }\n        };\n\n        const params2 = {\n            id: `e${oldId}-${id}`,\n            source: `${oldId}`,\n            target: `${id}`\n        };\n\n        if (a !== 1) {\n            dispatch({type: \"ADD_ELEMENTS\", payload: [params1, params2]});\n        }\n    }\n\n\n    return (\n        <div className='graphField'>\n            <ReactFlow\n                elements={elements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                deleteKeyCode={46}\n                nodesDraggable={false}\n                onElementClick={onElementClick}\n                onPaneClick={onPaneClick}\n            >\n\n                {currElem && <NodeEditor\n                    node={currElem}\n                    onSubmit={onElementEdit}\n                />}\n            </ReactFlow>\n        </div>\n    );\n\n};\n\nexport default Graph;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport \"./main.sass\";\n\nconst NodeList = () => {\n    const dispatch = useDispatch();\n    const elements = useSelector(state => state.elements.elements);\n\n    const onElementClick = (id) => {\n        const [params] = elements.filter((element) => element.id === id);\n        dispatch({type: \"SET_CURR\", payload: params});\n\n        const [element] = Array.from(document.getElementsByClassName('react-flow__node')).filter((el) => el.getAttribute(\"data-id\") === id );\n        element.click();\n    }\n\n    return (\n        <div className=\"node-list\">\n            <h2 className=\"node-list-title\">Nodes:</h2>\n            <div className=\"node-list-items\">\n                {elements\n                    .filter((element) => !element.id.startsWith('e'))\n                    .map((element, i) => {\n                        return (\n                            <div key={i + 1} className=\"node-list-item\" onClick={() => onElementClick(element.id)}>\n                                {element.data.label}\n                            </div>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeList;","import './App.sass';\nimport Graph from \"./components/Graph/Graph\";\nimport NodeList from \"./components/NodeList/NodeList\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Graph/>\n            <NodeList/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import initialElements from './graphElements';\n\nconst initialState = {\n    elements: initialElements\n}\n\nconst elementsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_ELEMENTS\":\n            return {\n                ...state,\n                elements: [\n                    ...state.elements,\n                    ...action.payload,\n                ],\n            };\n        case \"REMOVE_ELEMENTS\":\n            const ids = action.payload.map((el) => el.id);\n            return {\n                ...state,\n                elements: state.elements.filter((el) => !ids.includes(el.id))\n            };\n        case \"CHANGE_LABEL\":\n            return {\n                ...state,\n                elements: initialState.elements.map((node) => {\n                    if (node.id === action.payload.id) {\n                        node.data.label = action.payload.label;\n                    }\n                    return node;\n                })\n            };\n        case \"CHANGE_CONTENT\":\n            return {\n                ...state,\n                elements: initialState.elements.map((node) => {\n                    if (node.id === action.payload.id) {\n                        node.data.content = action.payload.content;\n                    }\n                    return node;\n                })\n            };\n        default:\n            return state;\n    }\n}\n\nexport default elementsReducer;","let elements = [\n  {\n    id: '1',\n    type: 'input',\n    sourcePosition: 'right',\n    targetPosition: 'left',\n    data: {\n      label: 'Input Node',\n      content: 'Hello! This is the first node.'\n    },\n    position: { x: 250, y: 420 },\n  },\n  {\n    id: '2',\n    sourcePosition: 'right',\n    targetPosition: 'left',\n    data: {\n      label: 'Default Node',\n      content: 'Hello. I am the second node'\n    },\n    position: { x: 500, y: 420 },\n  },\n  {\n    id: '3',\n    sourcePosition: 'right',\n    targetPosition: 'left',\n    data: {\n      label: 'Node',\n      content: ''\n    },\n    position: { x: 790, y: 290 },\n  },\n  {\n    id: '4',\n    sourcePosition: 'right',\n    targetPosition: 'left',\n    data: {\n      label: 'Node',\n      content: ''\n    },\n    position: { x: 790, y: 550 },\n  },\n  { id: 'e1-2', source: '1', target: '2', },\n  { id: 'e2-3', source: '2', target: '3', },\n  { id: 'e2-4', source: '2', target: '4', },\n];\n\nexport default elements;","const initialState = {\n    currElem: null\n}\n\nconst currElemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_CURR\":\n            return {...state, currElem: action.payload};\n        case \"UNSET_CURR\":\n            return {...state, currElem: null};\n        default:\n            return state;\n    }\n}\n\nexport default currElemReducer;","const initialState = {\n    fields: {\n        id: \"\",\n        label: \"\",\n        content: \"\",\n    }\n}\n\nconst editorFieldsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"INIT\":\n            return {\n                ...state,\n                fields: {\n                    ...initialState.fields,\n                    id: action.payload.id,\n                    label: action.payload.label,\n                    content: action.payload.content,\n                }\n            };\n        case \"CHANGE\":\n            return {\n                ...state,\n                fields: {\n                    ...initialState.fields,\n                    id: action.payload.id,\n                    content: action.payload.content,\n                    label: action.payload.label,\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nexport default editorFieldsReducer;","import {combineReducers, createStore} from \"redux\";\nimport elementsReducer from \"./elementsReducer\";\nimport currElemReducer from \"./currElemReducer\";\nimport editorFieldsReducer from \"./editorFieldsReducer\";\n\nconst rootReducer = combineReducers({\n    currElement: currElemReducer,\n    elements: elementsReducer,\n    editorFields: editorFieldsReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}